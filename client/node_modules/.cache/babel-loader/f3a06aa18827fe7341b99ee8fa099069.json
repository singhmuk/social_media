{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/MERN/proshop_mern-master/frontend/src/screens/file.js\";\nimport React from \"react\";\nimport RichTextEditor from 'react-rte';\n\nclass RichTextMarkdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = value => {\n      this.setState({\n        value\n      });\n      let markdown = value.toString('markdown');\n\n      if (markdown.length === 2 && markdown.charCodeAt(0) === 8203 && markdown.charCodeAt(1) === 10) {\n        markdown = '';\n      }\n\n      this.props.input.onChange(markdown);\n    };\n\n    this.state = {\n      value: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.RichTextEditor = window.RichTextEditor;\n    this.setState({\n      value: this.props.input.value ? this.RichTextEditor.createValueFromString(this.props.input.value, 'markdown') : this.RichTextEditor.createEmptyValue()\n    });\n  }\n\n  render() {\n    const {\n      RichTextEditor,\n      state: {\n        value\n      },\n      handleChange\n    } = this;\n    return RichTextEditor ? /*#__PURE__*/React.createElement(RichTextEditor, {\n      value: value,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 88\n      }\n    });\n  }\n\n}\n\nexport default RichTextMarkdown;","map":{"version":3,"sources":["/home/mukeshs/MERN/proshop_mern-master/frontend/src/screens/file.js"],"names":["React","RichTextEditor","RichTextMarkdown","Component","constructor","props","handleChange","value","setState","markdown","toString","length","charCodeAt","input","onChange","state","undefined","componentDidMount","window","createValueFromString","createEmptyValue","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,WAA3B;;AAGA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,YAdmB,GAcJC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACA,UAAIE,QAAQ,GAAGF,KAAK,CAACG,QAAN,CAAe,UAAf,CAAf;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,CAApB,IAAyBF,QAAQ,CAACG,UAAT,CAAoB,CAApB,MAA2B,IAApD,IAA4DH,QAAQ,CAACG,UAAT,CAAoB,CAApB,MAA2B,EAA3F,EAA+F;AAC7FH,QAAAA,QAAQ,GAAG,EAAX;AACD;;AACD,WAAKJ,KAAL,CAAWQ,KAAX,CAAiBC,QAAjB,CAA0BL,QAA1B;AACD,KArBkB;;AAEjB,SAAKM,KAAL,GAAa;AAAER,MAAAA,KAAK,EAAES;AAAT,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,cAAL,GAAsBiB,MAAM,CAACjB,cAA7B;AACA,SAAKO,QAAL,CAAc;AACZD,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWQ,KAAX,CAAiBN,KAAjB,GACL,KAAKN,cAAL,CAAoBkB,qBAApB,CAA0C,KAAKd,KAAL,CAAWQ,KAAX,CAAiBN,KAA3D,EAAkE,UAAlE,CADK,GAEL,KAAKN,cAAL,CAAoBmB,gBAApB;AAHU,KAAd;AAKD;;AAWDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,cAAF;AAAkBc,MAAAA,KAAK,EAAE;AAAER,QAAAA;AAAF,OAAzB;AAAoCD,MAAAA;AAApC,QAAqD,IAA3D;AACA,WAAOL,cAAc,gBAAG,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAEM,KAAvB;AAA8B,MAAA,QAAQ,EAAED,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnF;AACD;;AA3B4C;;AA8B/C,eAAeJ,gBAAf","sourcesContent":["import React from \"react\";\nimport RichTextEditor from 'react-rte';\n\n\nclass RichTextMarkdown extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { value: undefined }\n  }\n\n  componentDidMount() {\n    this.RichTextEditor = window.RichTextEditor\n    this.setState({\n      value: this.props.input.value ?\n        this.RichTextEditor.createValueFromString(this.props.input.value, 'markdown') :\n        this.RichTextEditor.createEmptyValue()\n    })\n  }\n\n  handleChange = value => {\n    this.setState({ value })\n    let markdown = value.toString('markdown')\n    if (markdown.length === 2 && markdown.charCodeAt(0) === 8203 && markdown.charCodeAt(1) === 10) {\n      markdown = ''\n    }\n    this.props.input.onChange(markdown)\n  }\n\n  render() {\n    const { RichTextEditor, state: { value }, handleChange } = this\n    return RichTextEditor ? <RichTextEditor value={value} onChange={handleChange} /> : <div />\n  }\n}\n\nexport default RichTextMarkdown"]},"metadata":{},"sourceType":"module"}